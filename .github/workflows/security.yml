name: 🔍 Code Quality & Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

jobs:
  # 🔍 Code Quality Analysis
  code-quality:
    name: 🔍 Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          MERN-Telemetry/frontend/package-lock.json
          MERN-Telemetry/backend/package-lock.json

    - name: 🔍 SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: MERN-Telemetry

    - name: 🧹 ESLint Frontend
      working-directory: ./MERN-Telemetry/frontend
      run: |
        npm install
        npx eslint src/ --ext .js,.jsx,.ts,.tsx --format @microsoft/eslint-formatter-sarif --output-file eslint-frontend.sarif || true

    - name: 🧹 ESLint Backend
      working-directory: ./MERN-Telemetry/backend
      run: |
        npm install
        npx eslint . --ext .js --format @microsoft/eslint-formatter-sarif --output-file eslint-backend.sarif || true

    - name: 📤 Upload ESLint results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: |
          MERN-Telemetry/frontend/eslint-frontend.sarif
          MERN-Telemetry/backend/eslint-backend.sarif

  # 🛡️ Security Analysis
  security-analysis:
    name: 🛡️ Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript

    - name: 🔨 Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: 📦 Setup Node.js for npm audit
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 🔍 npm audit - Frontend
      working-directory: ./MERN-Telemetry/frontend
      run: |
        npm install
        npm audit --audit-level=moderate --json > npm-audit-frontend.json || true

    - name: 🔍 npm audit - Backend
      working-directory: ./MERN-Telemetry/backend
      run: |
        npm install
        npm audit --audit-level=moderate --json > npm-audit-backend.json || true

    - name: 📤 Upload npm audit results
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-results
        path: |
          MERN-Telemetry/frontend/npm-audit-frontend.json
          MERN-Telemetry/backend/npm-audit-backend.json

  # 🧪 Dependency Check
  dependency-check:
    name: 🧪 Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔍 OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'MERN-Telemetry'
        path: './MERN-Telemetry'
        format: 'ALL'
        args: >
          --enableRetired
          --enableExperimental
          --nvdApiKey ${{ secrets.NVD_API_KEY }}

    - name: 📤 Upload Dependency Check results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: reports/dependency-check-report.sarif

    - name: 📊 Archive Dependency Check results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/
